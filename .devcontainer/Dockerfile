# See https://developers.redhat.com/articles/2022/09/16/updating-docker-hubs-openjdk-image for details
# about the choice of base image here. [Manfred, 03 Sep 2023]
FROM eclipse-temurin:20.0.2_9-jdk
# Last version check on 03 Seo 2023.
# Newer versions may be available at https://hub.docker.com/_/eclipse-temurin

# FROM openjdk:18.0.1-bullseye
# To check for newer JDK versions, see https://openjdk.java.net/, then 
# https://hub.docker.com/_/openjdk. Last checked on 06 jun 2022. [Manfred, 06jun2022]

# Install some helpful tools. You can safely remove packages you don't like. [Manfred, 23may2022]
RUN apt update && \
    apt upgrade -y && \
    apt install -y \
        procps \
        iputils-ping \
        net-tools \
        lsb-release
# procps: to support command 'ps'
# iputils-ping: to support command 'ping' (https://linuxconfig.org/ping-command-not-found-on-ubuntu-20-04-focal-fossa-linux) [Manfred, 19sep2021]
# net-tools: to support command such as 'arp', 'ifconfig', 'netstat', etc. (https://helpmanual.io/packages/apt/net-tools/) [Manfred, 26sep2021]
# lsb-release: to support commmand 'lsb_release -a' [Manfred, 15jan2022]

RUN apt update && \
    apt install -y \
        git

# Create non-root user (zero trust principle, least privileged principle)
RUN groupadd -g 1000 -r dev && \
    useradd -u 1000 -r -g dev -m -s $(which bash) dev
# Option '-m' to create home directory (see https://askubuntu.com/a/393470)
# Option '-s' to set shell for this user (see comment in https://askubuntu.com/a/393470)
# Option '-r' creates a system user which does not expire (see https://linuxize.com/post/how-to-create-users-in-linux-using-the-useradd-command/)

# How to add sudo support for the non-root user is described at https://code.visualstudio.com/remote/advancedcontainers/add-nonroot-user#_creating-a-nonroot-user
# However, standard practice is not to add sudo support for security reasons. VS Code will connect
# to the running dev container as the user specified in file ".devcontainer/devcontainer.json" in
# property "remoteUser". If you need to run commands as root to set up the dev container, use the
# "RUN" directive in Dockerfile or add suitable code to the script ".devcontainer/entrypoint.sh". 
# [Manfred, 16jan2022]

# Install Apache Maven
RUN apt install -y maven

# Create working directory. Ownership will be changed in entrypoint.sh which
# executes *after* the volume has been mounted.
RUN mkdir /src

# Copy entrypoint script into container, make it executable, then make it the entrypoint for the
# container:
COPY entrypoint.sh /entrypoint.sh
RUN chmod +x /entrypoint.sh
# Option '+x' adds executable flag to the file
ENTRYPOINT ["/entrypoint.sh"]
